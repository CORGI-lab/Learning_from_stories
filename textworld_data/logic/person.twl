# person
type pr : t {
    predicates {
        not_asked(pr);
        asked(pr);
        attacked(pr);
        stressed(pr);
        not_aided(pr);
        not_stressed(pr);
        aided(pr);
    }

    rules {
        ask/pr :: $at(P, r) & $at(pr,r) & $in(pr, I) & not_asked(pr) -> asked(pr);
        aid/pr :: $at(P, r) & $at(pr,r) & $in(pr, I) & not_aided(pr) -> aided(pr);
    }

    constraints {
        pr1 :: asked(pr) & not_asked(pr) -> fail();
        pr2 :: aided(pr) & not_aided(pr) -> fail();
    }

    inform7 {
        type {
            kind :: "person-like";
            definition :: "person-like is something. person-like can be asked. person-like can be stressed. person-like can be aided. a person-like is usually not aided. ";
        }

        predicates {
            attacked(pr)  :: "The {pr} is attacked";
            aided(pr) :: "The {pr} is aided";
            asked(pr) :: "The {pr} is asked";
            not_asked(pr) :: "The {pr} is not asked";
            stressed(pr) :: "The {pr} is stressed";
            not_stressed(pr) :: "The {pr} is not stressed";
            not_aided(pr) :: "The {pr} is not aided";
        }

        commands {
            ask/pr :: "ask the {pr}" :: "asking the {pr}";
            aid/pr :: "aid the {pr}" :: "aiding the {pr}";
        }

        code :: """
            [Asking]
            Understand the command "ask" as something new. 
            Understand "ask [something]" as _asking. 
            _asking is an action applying to a thing. 

            Carry out _asking: 
                if a person-like (called tx) is not asked: 
                    say "The person is being asked about the bank robbery.";
                    Now the tx is asked;
            After _asking: 
                Say "[the noun] has given the information. he said go north.";

            [Aiding]
            Understand the command "aid" as something new. 
            Understand "aid [something]" as aiding. 
            aiding is an action applying to a thing. 

            Carry out aiding: 
                if a person-like (called px) is not aided: 
                    say "You aid the person with their problem.";
                    Now the px is aided; 
            After aiding: 
                Say "They appreciate your aid.";
        """;
    }
}
