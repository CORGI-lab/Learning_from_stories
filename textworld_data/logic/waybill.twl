#waybill
type fo : o {
    predicates {
        stampable(fo);
        stamped(fo);
        stampless(fo);
        expired(fo);
        current(fo);
    }

    rules {
        stamp :: $in(fo, I) & stampless(fo) & current(fo) -> stamped(fo);
    }

    inform7 {
        type {
            kind :: "waybill";
            definition :: "waybills can be stamped. waybills can be stampable. waybills can be expired. waybills can be current. waybills are portable. waybills can be seen. waybills can be examined. waybills can be on something. waybills can be stampless.";
        }

        predicates {
            stampable(fo) :: "The {fo} is stampable";
            stamped(fo) :: "The {fo} is stamped";
            stampless(fo) :: "The {fo} is stampless";
            current(fo) :: "The {fo} is current";
            expired(fo) :: "The {fo} is expired";
        }

        commands {
            stamp :: "stamp {fo}" :: "stamping the {fo}";
        }

        code :: """
            [Stamping forms]
            Understand the command  "stamp" as something new.
            Stamping is an action applying to one carried thing.

            Before stamping when the noun is stampable and the noun is expired:
                say "This form is expired and worthless now.";
                rule fails.

            Before stamping when the noun is stampable and the noun is not stampless:
                say "You've already stamped this.";
                rule fails.

            Carry out stamping a carried waybill (called the waybill item):
                Now the waybill item is stamped;
                Now the waybill item is not stampless;
                say "You stamp the [waybill item] using your official seal.".

            Understand "stamp [something]" as stamping.
        """;
    }
}
